-------------------
READ ME !!
-------------------
This script provides a dummy data set which can also be used in the production
environment.

The following listings provide a means for working with integration testing.
When programming a solution for a product scenario, a test should be used to
ensure that the SQL result sets which will be handled and presented on the GUI
are correct.


----------
THE SCRIPT
----------
The SQL script "script.sql" provides DML (data manipulation language) statements
which will insert records of data into the data base.

The script features:
- 3 Person entities.
- 3 User entities.
- 25 Author entities.
- 25 Book entities.
- 25 Comments entities.
- 25 Favourites entities.

Integration testing example:
1) Test: there are only 3 Person records held in the database.
A) The data set result should only contain 3 records.

1) Test: there are a number of Comments held in the database.
A) The data set result should only contain 25 records.

FYI: When adding additional data into the database it is best to work with an
empty database that way if you were only testing with two users then it will
be difficult to get confused.

-------------------
INTEGRATION TESTING
-------------------
Some help with integration tests. When performing tests we should ensure that
the number of results equal the expected number of records. This is proven by
using the test data and verifying that the results are as expected.


E.g: How many accounts is Person #0 associated with? Answer: (always) 1.
E.g: How many books are favourites of Person #0 & #1? Answer: (always) 4.
E.g: List the favourites (id) of Person #0 & #1? Answer: "0, 1, 10, 11".


Expected test results:
- Person #0 is associated with 1 User.
- Person #1 is associated with 1 User.
- Person #2 is associated with 1 User.

- User #0 has 10 comments.
- User #1 has 9 comments.
- User #2 has 5 comments.

- User #0 has 9 Favourites.
- User #1 has 9 Favourites.
- User #2 has 7 Favourites.

- User #0 and User #1 have 4 Favourites which are the same.
- User #0 and User #2 have 4 Favourites which are the same.
- User #1 hand User #2 have 4 Favourites which are the same.

- Matching Favourites of User #0 & User #1: {0, 1, 10, 11}.
- Matching Favourites of User #0 & User #2: {0, 1, 19, 20}.

- Matching Favourites of User #1 & User #0: {0, 1, 10, 11}.
- Matching Favourites of User #1 & User #2: {0, 1, 19, 20}.

- Matching Favourites of User #2 & User #0: {0, 1, 19, 20}.
- Matching Favourites of User #2 & User #1: {10, 11, 19, 20}.