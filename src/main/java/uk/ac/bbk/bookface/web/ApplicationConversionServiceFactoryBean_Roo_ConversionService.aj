// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package uk.ac.bbk.bookface.web;

import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;
import uk.ac.bbk.bookface.domain.Author;
import uk.ac.bbk.bookface.domain.Book;
import uk.ac.bbk.bookface.domain.Comments;
import uk.ac.bbk.bookface.domain.Favourites;
import uk.ac.bbk.bookface.domain.Person;
import uk.ac.bbk.bookface.web.ApplicationConversionServiceFactoryBean;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Author, String> ApplicationConversionServiceFactoryBean.getAuthorToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<uk.ac.bbk.bookface.domain.Author, java.lang.String>() {
            public String convert(Author author) {
                return new StringBuilder().append(author.getName()).toString();
            }
        };
    }
    
    public Converter<Long, Author> ApplicationConversionServiceFactoryBean.getIdToAuthorConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, uk.ac.bbk.bookface.domain.Author>() {
            public uk.ac.bbk.bookface.domain.Author convert(java.lang.Long id) {
                return Author.findAuthor(id);
            }
        };
    }
    
    public Converter<String, Author> ApplicationConversionServiceFactoryBean.getStringToAuthorConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, uk.ac.bbk.bookface.domain.Author>() {
            public uk.ac.bbk.bookface.domain.Author convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Author.class);
            }
        };
    }
    
    public Converter<Book, String> ApplicationConversionServiceFactoryBean.getBookToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<uk.ac.bbk.bookface.domain.Book, java.lang.String>() {
            public String convert(Book book) {
                return new StringBuilder().append(book.getTitle()).toString();
            }
        };
    }
    
    public Converter<Long, Book> ApplicationConversionServiceFactoryBean.getIdToBookConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, uk.ac.bbk.bookface.domain.Book>() {
            public uk.ac.bbk.bookface.domain.Book convert(java.lang.Long id) {
                return Book.findBook(id);
            }
        };
    }
    
    public Converter<String, Book> ApplicationConversionServiceFactoryBean.getStringToBookConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, uk.ac.bbk.bookface.domain.Book>() {
            public uk.ac.bbk.bookface.domain.Book convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Book.class);
            }
        };
    }
    
    public Converter<Comments, String> ApplicationConversionServiceFactoryBean.getCommentsToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<uk.ac.bbk.bookface.domain.Comments, java.lang.String>() {
            public String convert(Comments comments) {
                return new StringBuilder().append(comments.getDescription()).append(' ').append(comments.getPerson()).toString();
            }
        };
    }
    
    public Converter<Long, Comments> ApplicationConversionServiceFactoryBean.getIdToCommentsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, uk.ac.bbk.bookface.domain.Comments>() {
            public uk.ac.bbk.bookface.domain.Comments convert(java.lang.Long id) {
                return Comments.findComments(id);
            }
        };
    }
    
    public Converter<String, Comments> ApplicationConversionServiceFactoryBean.getStringToCommentsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, uk.ac.bbk.bookface.domain.Comments>() {
            public uk.ac.bbk.bookface.domain.Comments convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Comments.class);
            }
        };
    }
    
    public Converter<Favourites, String> ApplicationConversionServiceFactoryBean.getFavouritesToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<uk.ac.bbk.bookface.domain.Favourites, java.lang.String>() {
            public String convert(Favourites favourites) {
                return new StringBuilder().append(favourites.getPerson()).append(' ').append(favourites.getBook()).toString();
            }
        };
    }
    
    public Converter<Long, Favourites> ApplicationConversionServiceFactoryBean.getIdToFavouritesConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, uk.ac.bbk.bookface.domain.Favourites>() {
            public uk.ac.bbk.bookface.domain.Favourites convert(java.lang.Long id) {
                return Favourites.findFavourites(id);
            }
        };
    }
    
    public Converter<String, Favourites> ApplicationConversionServiceFactoryBean.getStringToFavouritesConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, uk.ac.bbk.bookface.domain.Favourites>() {
            public uk.ac.bbk.bookface.domain.Favourites convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Favourites.class);
            }
        };
    }
    
    public Converter<Person, String> ApplicationConversionServiceFactoryBean.getPersonToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<uk.ac.bbk.bookface.domain.Person, java.lang.String>() {
            public String convert(Person person) {
                return new StringBuilder().append(person.getScreenName()).append(' ').append(person.getEmailAddress()).toString();
            }
        };
    }
    
    public Converter<Long, Person> ApplicationConversionServiceFactoryBean.getIdToPersonConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, uk.ac.bbk.bookface.domain.Person>() {
            public uk.ac.bbk.bookface.domain.Person convert(java.lang.Long id) {
                return Person.findPerson(id);
            }
        };
    }
    
    public Converter<String, Person> ApplicationConversionServiceFactoryBean.getStringToPersonConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, uk.ac.bbk.bookface.domain.Person>() {
            public uk.ac.bbk.bookface.domain.Person convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Person.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getAuthorToStringConverter());
        registry.addConverter(getIdToAuthorConverter());
        registry.addConverter(getStringToAuthorConverter());
        registry.addConverter(getBookToStringConverter());
        registry.addConverter(getIdToBookConverter());
        registry.addConverter(getStringToBookConverter());
        registry.addConverter(getCommentsToStringConverter());
        registry.addConverter(getIdToCommentsConverter());
        registry.addConverter(getStringToCommentsConverter());
        registry.addConverter(getFavouritesToStringConverter());
        registry.addConverter(getIdToFavouritesConverter());
        registry.addConverter(getStringToFavouritesConverter());
        registry.addConverter(getPersonToStringConverter());
        registry.addConverter(getIdToPersonConverter());
        registry.addConverter(getStringToPersonConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
